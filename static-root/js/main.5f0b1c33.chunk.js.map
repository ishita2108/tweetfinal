{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendupdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","classname","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.5f0b1c33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data){\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()      // xhr = SomeClass()\n    // const method = 'GET'                //'POST'\n    const url = `http://localhost:8000/api${endpoint}`\n    xhr.responseType = \"json\"\n    const csrftoken = getCookie('csrftoken');\n    xhr.open(method,url)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    //for making ajax True\n    \n    if (csrftoken){\n      //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n      xhr.setRequestHeader('X-CSRFToken', csrftoken)\n    }\n    \n    xhr.onload = function () {\n      if (xhr.status === 403){\n        const detail = xhr.response.detail\n        if(detail === \"Authentication credentials were not provided.\"){\n          if (window.location.href.indexOf(\"login\") === -1){\n            window.location.href = \"/login?showLoginRequired=true\"\n          }\n        }\n      }\n      callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e){\n      console.log(\"error\", e)\n      callback({\"message\": \"The request was an error\"}, 400)\n    }\n    // console.log(jsonData)\n      xhr.send(jsonData)\n}\n\n","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n  backendLookup(\"POST\", \"/tweets/create/\", callback, {content:newTweet})\n}\n\nexport function apiTweetFeed(callback, nextUrl){\n  let endpoint = \"/tweets/feed/\"\n\n  if (nextUrl !== null && nextUrl !== undefined ){\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\",\"\")\n  }\n  backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetList(username, callback, nextUrl){\n  let endpoint = \"/tweets/\"\n  if (username){\n    endpoint = `/tweets/?username=${username}`\n  }\n  if (nextUrl !== null && nextUrl !== undefined ){\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\",\"\")\n  }\n  backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetDetail(tweetId, callback){\n  backendLookup(\"GET\", `/tweets/${tweetId}`, callback)\n}\n\nexport function apiTweetAction(tweetId, action, callback){\n  const data = {id:tweetId, action:action}\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}","import React from 'react';\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props){\n   const {tweet, action, didPerformAction} = props\n   const likes = tweet.likes ? tweet.likes : 0\n  //  const [likes, setLikes] = useState()\n  //  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n   const className= props.className ?props.className : 'btn btn-primary btn-small'\n   const actionDisplay = action.display ? action.display: 'Action'\n   const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n\n  const handleActionBackendEvent = (response, status) =>{\n    console.log(status, response) \n    if ((status === 200 || status === 201) && didPerformAction){\n      //setLikes(response.likes)\n      didPerformAction(response, status)\n      // setUserLike(true)\n    }\n\n      // if (action.type === 'like'){\n      //     if(userLike === true){\n      //         //perhaps i unlike it?\n      //         setLikes(likes - 1)\n      //         setUserLike(false)\n      //     }\n      //     else{\n      //         setLikes(likes + 1)\n      //         setUserLike(true)\n      //     }\n      // }\n  }\n\n   const handleClick =(event) =>{\n       event.preventDefault()\n       apiTweetAction(tweet.id, action.type, handleActionBackendEvent)  \n   }\n      return <button className={className} onClick={handleClick}>{display}</button>\n    }","import React from 'react';\n\n\nexport function UserLink(props){\n  const {username} = props\n  const handleUserLink = (event) =>{\n    event.preventDefault()\n    window.location.href = `/profiles/${username}`\n  }\n  return <span className=\"pointer\" onClick= {handleUserLink}>\n    {props.children}    \n    </span>\n}\n\nexport function UserDisplay (props){\n  const {user, includeFullName} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}`: null\n  return <React.Fragment>\n    {nameDisplay}\n    <UserLink username= {user.username}> @{user.username} </UserLink>   \n    </React.Fragment>\n}\n\nexport function UserPicture(props){\n  const {user} = props\n  return <UserLink username= {user.username}>\n    <span className=\" mx-2 px-3 py-2 rounded-circle bg-dark text-white\">{user.username[0]}</span>\n    </UserLink>\n}","import React, {useState} from 'react';\nimport {ActionBtn} from './buttons'\nimport {UserDisplay, UserPicture} from '../profiles'\n\n\nexport function ParentTweet(props){\n  const {tweet} = props\n  return ( tweet.parent ?\n      <Tweet isRetweet retweeter={props.retweeter} hideActions className= {' '} tweet={tweet.parent}/> : null\n        \n  )\n}\n\nexport function Tweet(props){\n  const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n  let className= props.className ? props.className : ' col-10 mx-auto col-md-6 '\n  className = isRetweet === true ? `${className} p-2 border rounded` : className\n  const path = window.location.pathname\n  const match = path.match(/(?<tweetid>\\d+)/)\n  const urlTweetId = match ? match.groups.tweetid: -1\n  const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n  const handleLink = (event) =>{\n    event.preventDefault()\n    window.location.href = `/${tweet.id}`\n  }\n\n  const handlePerformAction = (newActionTweet, status)=>{\n    if (status === 200){\n      setActionTweet(newActionTweet)\n    }\n    else if(status === 201){\n      //let the tweet list know.\n      if(didRetweet){\n        didRetweet(newActionTweet)\n      }\n    }\n  }\n\n  return (\n    <div className={className}>\n        {isRetweet === true && <div className=\"mb-2\"> \n        <span className = 'small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n        </div>}\n      <div className=\"d-flex\">\n        <div className=\"\">\n        <UserPicture user={tweet.user} />\n        </div>\n        <div className=\"col-11\">\n    <div>\n      \n      <p>\n        <UserDisplay includeFullName user={tweet.user} />\n      </p>\n      <p>{tweet.content}</p>\n      \n     <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n    </div>\n    <div className='btn btn-group px-0'>\n      {(actionTweet && hideActions !== true) && <React.Fragment>\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action = {{type:\"like\", display:\"Likes\"}}/>\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action = {{type:\"unlike\", display:\"Unlike\"}}/>\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action = {{type:\"retweet\", display:\"Retweet\"}}/>\n      </React.Fragment>\n      }\n        {isDetail === true ? null :<button className=\"btn btn-outline-success btn-small\" onClick={handleLink}>View</button>}\n      </div>\n    </div>\n    </div>\n    </div>\n  )\n}","import React, {useEffect, useState} from 'react';\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\nexport function TweetsList(props){\n   const [tweetsInit, setTweetsInit] = useState([])\n   const [tweets, setTweets] = useState([])\n   const [nextUrl, setNextUrl] = useState(null)\n   const [tweetsDidSet, setTweetsDidSet] = useState(false)   //to  stop apiTweetList on going again and again\n  \n    useEffect(()=>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n        \n    },[props.newTweets,tweets,tweetsInit])\n  useEffect(()=>{\n    if (tweetsDidSet === false){\n    const handleTweetListLookup = (response, status) =>{\n      if (status === 200){\n        setNextUrl(response.next)\n        setTweetsInit(response.results)\n        setTweetsDidSet(true)\n      }\n      else{\n        alert(\"There was an error\")\n      }\n    }\n    //do my lookup\n    apiTweetList(props.username,handleTweetListLookup)\n  }}, [tweetsInit, tweetsDidSet, setTweetsDidSet,props.username])\n\n  const handleDidRetweet = (newTweet) =>{\n    const updateTweetsInit = [...tweetsInit]\n    updateTweetsInit.unshift(newTweet)\n    setTweetsInit(updateTweetsInit)\n\n    const updateFinalTweets = [...tweets]\n    updateFinalTweets.unshift(tweets)\n    setTweets(updateFinalTweets)\n  }\n\n  const handleLoadNext = (event) => {\n    event.preventDefault()\n    if (nextUrl !== null){\n      const handleLoadNextResponse = (response, status)=>{\n        if (status === 200){\n        setNextUrl(response.next)\n        const newTweets = [...tweets].concat(response.results)\n        setTweetsInit(newTweets)\n        setTweets(newTweets)\n      }\n      else{\n        alert(\"There was an error\")\n      }\n      }\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n    }\n  }\n\n  return <React.Fragment> {tweets.map((item, index)=>{\n        return <Tweet tweet={item} didRetweet={handleDidRetweet} className=\"my-5 py-5 border bg-white text-dark\" key ={`${index}-{item.id}`}/>\n        })}\n        {nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">Load Next</button>}\n        </React.Fragment>\n}","import React from 'react';\nimport {apiTweetCreate} from './lookup';\n\n\nexport function TweetCreate(props){\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n\n  const handleBackendupdate = (response, status)=>{\n    if(status === 201){\n      didTweet(response)\n    }\n    else{\n      console.log(response)\n      alert(\"An error occured, please try again!!\")\n    }\n  }\n\n  const handleSubmit = (event) =>{\n      event.preventDefault()\n      // console.log(event)\n      // console.log(textAreaRef.current.value)\n      const newVal = textAreaRef.current.value\n      //backend api request handler\n      // console.log(newVal)\n      apiTweetCreate(newVal, handleBackendupdate)\n      textAreaRef.current.value = ''\n  }\n\n  return <div className={props.className}>\n      <form onSubmit={handleSubmit}>\n          <textarea ref={textAreaRef} required={true} name = \"tweet\"  className=\"form-control\"></textarea>\n          <button type=\"submit\" className=\"btn btn-primary my-3\">Tweet Now</button>\n          \n      </form>\n  </div>\n}\n","import React, {useEffect, useState} from 'react';\nimport {apiTweetFeed} from './lookup'\nimport {Tweet} from './detail'\n\nexport function FeedList(props){\n   const [tweetsInit, setTweetsInit] = useState([])\n   const [tweets, setTweets] = useState([])\n   const [nextUrl, setNextUrl] = useState(null)\n   const [tweetsDidSet, setTweetsDidSet] = useState(false)   //to  stop apiTweetList on going again and again\n  \n    useEffect(()=>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n        \n    },[props.newTweets,tweets,tweetsInit])\n  useEffect(()=>{\n    if (tweetsDidSet === false){\n    const handleTweetListLookup = (response, status) =>{\n      if (status === 200){\n        setNextUrl(response.next)\n        setTweetsInit(response.results)\n        setTweetsDidSet(true)\n      }\n      else{\n        alert(\"There was an error\")\n      }\n    }\n    //do my lookup\n    apiTweetFeed(handleTweetListLookup)\n  }}, [tweetsInit, tweetsDidSet, setTweetsDidSet,props.username])\n\n  const handleDidRetweet = (newTweet) =>{\n    const updateTweetsInit = [...tweetsInit]\n    updateTweetsInit.unshift(newTweet)\n    setTweetsInit(updateTweetsInit)\n\n    const updateFinalTweets = [...tweets]\n    updateFinalTweets.unshift(tweets)\n    setTweets(updateFinalTweets)\n  }\n\n  const handleLoadNext = (event) => {\n    event.preventDefault()\n    if (nextUrl !== null){\n      const handleLoadNextResponse = (response, status)=>{\n        if (status === 200){\n        setNextUrl(response.next)\n        const newTweets = [...tweets].concat(response.results)\n        setTweetsInit(newTweets)\n        setTweets(newTweets)\n      }\n      else{\n        alert(\"There was an error\")\n      }\n      }\n      apiTweetFeed(handleLoadNextResponse, nextUrl)\n    }\n  }\n\n  return <React.Fragment> {tweets.map((item, index)=>{\n        return <Tweet tweet={item} didRetweet={handleDidRetweet} className=\"my-5 py-5 border bg-white text-dark\" key ={`${index}-{item.id}`}/>\n        })}\n        {nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">Load Next</button>}\n        </React.Fragment>\n}","import React, {useEffect, useState} from 'react'\nimport {TweetsList} from './list'\nimport {TweetCreate} from './create'\nimport {Tweet} from './detail'\nimport {apiTweetDetail} from './lookup'\nimport {FeedList} from './feed'\n\n\nexport function FeedComponent(props){\n  console.log(props)\n  const [newTweets, setNewTweets] = useState([])\n\n  const canTweet = props.canTweet === 'false'? false : true\n  const handleNewTweet = (newTweet)=>{\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n\n  return <div className={props.className}> \n  {canTweet === true && <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />   \n  } <FeedList newTweets={newTweets} {...props}/>\n  </div>  \n}\n\nexport function TweetsComponent(props){\n  console.log(props)\n  const [newTweets, setNewTweets] = useState([])\n\n  const canTweet = props.canTweet === 'false'? false : true\n  const handleNewTweet = (newTweet)=>{\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n\n  return <div className={props.className}> \n  {canTweet === true && <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />   \n  } <TweetsList newTweets={newTweets} {...props}/>\n  </div>  \n}\n\n\nexport function TweetDetailComponent(props){\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) =>{\n    if(status === 200){\n      setTweet(response)\n    }\n    else{\n      alert(\"There was an error finding your tweet\")\n    }\n  }\n  useEffect(()=>{\n    if (didLookup === false){\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  },[tweetId,didLookup, setDidLookup])\n  return tweet === null ? null : <Tweet tweet = {tweet} classname={props.className}/>\n}\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n        <TweetsComponent/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {TweetsComponent, TweetDetailComponent, FeedComponent} from './tweets';\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(\n    <App />, appEl);\n}\n\nconst e = React.createElement\n\nconst tweetsEl = document.getElementById('tweetme-2')\nif (tweetsEl){\n  // console.log(tweetsEl.dataset)\n  ReactDOM.render(\n     e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById('tweetme-2-feed')\nif (tweetFeedEl){\n  // console.log(tweetsEl.dataset)\n  ReactDOM.render(\n     e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElement = document.querySelectorAll('.tweetme2-detail')\n\ntweetDetailElement.forEach(container =>{\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), container);\n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}